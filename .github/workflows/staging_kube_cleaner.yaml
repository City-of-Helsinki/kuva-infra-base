name: Kubernetes cleaner for staging

on:
  push:
    branches:
      - main
    paths:
      - 'maintain/kube_pod_cleaner/**'
      - '.github/workflows/staging_kube_cleaner.yaml'

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}/kube_pod_cleaner
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW_STAGING }}
  K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE_STAGING}}
  SRC_FOLDER: ./maintain/kube_pod_cleaner/

jobs:
  docker_build_and_push:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Execute permission
        run: |
          chmod +x maintain/kube_pod_cleaner/pod_cleaner.sh

      - name: Login to GitHub Packages
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CONTAINER_REGISTRY_USER }}
          password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}
        
      - uses: docker/build-push-action@v2
        with:
          context: ${{ env.SRC_FOLDER}}
          file: ${{ env.SRC_FOLDER}}Dockerfile
          push: true
          tags: |
            ${{ env.CONTAINER_REGISTRY_REPO }}:latest
            ${{ env.CONTAINER_REGISTRY_REPO }}:dev

  staging:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    name: Staging

    # allow only one deployment at a time
    concurrency: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v2

      - name: Deploy Order Expiration Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ${{ env.CONTAINER_REGISTRY_REPO }}
          kubeconfig_raw: ${{ env.KUBECONFIG_RAW }}
          target_namespace: ${{ env.K8S_NAMESPACE }}
          name: pod-cleaner
          command: "{/bin/bash}"
          args: "{-c, cd / && ./pod_cleaner.sh}"
          schedule: "*/5 * * * *" # every 5min
